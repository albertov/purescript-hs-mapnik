-- File auto generated by purescript-bridge! --
module Mapnik.Map where

import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.StrMap (StrMap)
import Data.Symbol (SProxy(SProxy))
import Mapnik.Color (Color)
import Mapnik.Common (Box)
import Mapnik.Enums (CompositeMode)
import Mapnik.Layer (Layer)
import Mapnik.Parameter (Value)
import Mapnik.Style (Style)
import Prim (Array, Int, Number, String)

import Prelude
import Data.Generic.Rep (class Generic)
import Data.Foreign.Class (class Decode, class Encode, decode, encode)
import Data.Foreign.Generic (defaultOptions, genericEncode, genericDecode)
import Data.Foreign.Generic.Class (class GenericDecode, class GenericEncode)

newtype Map a =
    Map {
      backgroundColor :: Maybe Color
    , backgroundImage :: Maybe String
    , backgroundImageCompOp :: Maybe CompositeMode
    , backgroundImageOpacity :: Maybe Number
    , srs :: Maybe String
    , bufferSize :: Maybe Int
    , maximumExtent :: Maybe Box
    , fontDirectory :: Maybe String
    , basePath :: Maybe String
    , fontSets :: StrMap (Array String)
    , styles :: StrMap Style
    , layers :: Array (Layer a)
    , parameters :: StrMap Value
    }

derive instance genericMap :: Generic (Map a) _

instance encodeMap :: Encode a => Encode (Map a) where encode = genericEncode defaultOptions

instance decodeMap :: Decode a => Decode (Map a) where decode = genericDecode defaultOptions

derive instance newtypeMap :: Newtype (Map a) _


--------------------------------------------------------------------------------
_Map :: forall a. Iso' (Map a) { backgroundColor :: Maybe Color, backgroundImage :: Maybe String, backgroundImageCompOp :: Maybe CompositeMode, backgroundImageOpacity :: Maybe Number, srs :: Maybe String, bufferSize :: Maybe Int, maximumExtent :: Maybe Box, fontDirectory :: Maybe String, basePath :: Maybe String, fontSets :: StrMap (Array String), styles :: StrMap Style, layers :: Array (Layer a), parameters :: StrMap Value}
_Map = _Newtype

--------------------------------------------------------------------------------
