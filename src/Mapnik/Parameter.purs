-- File auto generated by purescript-bridge! --
module Mapnik.Parameter where

import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Boolean, Int, Number, String)

import Prelude
import Data.Generic.Rep (class Generic)
import Data.Foreign.Class (class Decode, class Encode, decode, encode)
import Data.Foreign.Generic (defaultOptions, genericEncode, genericDecode)
import Data.Foreign.Generic.Types (Options, SumEncoding(..))
import Data.Foreign.Generic.Class (class GenericDecode, class GenericEncode)
import Data.Generic.Rep.Eq as GEq
import Data.Generic.Rep.Show as GShow

jOpts = defaultOptions { sumEncoding = ObjectWithSingleField, unwrapSingleConstructors = true}
data Value =
    TextValue String
  | DoubleValue Number
  | IntValue Int
  | BoolValue Boolean
  | NullValue

derive instance genericValue :: Generic Value _

instance encodeValue :: Encode Value where encode = genericEncode jOpts

instance decodeValue :: Decode Value where decode = genericDecode jOpts

instance showValue :: Show Value where show = GShow.genericShow

instance eqValue :: Eq Value where eq = GEq.genericEq


--------------------------------------------------------------------------------
_TextValue :: Prism' Value String
_TextValue = prism' TextValue f
  where
    f (TextValue a) = Just $ a
    f _ = Nothing

_DoubleValue :: Prism' Value Number
_DoubleValue = prism' DoubleValue f
  where
    f (DoubleValue a) = Just $ a
    f _ = Nothing

_IntValue :: Prism' Value Int
_IntValue = prism' IntValue f
  where
    f (IntValue a) = Just $ a
    f _ = Nothing

_BoolValue :: Prism' Value Boolean
_BoolValue = prism' BoolValue f
  where
    f (BoolValue a) = Just $ a
    f _ = Nothing

_NullValue :: Prism' Value Unit
_NullValue = prism' (\_ -> NullValue) f
  where
    f NullValue = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
